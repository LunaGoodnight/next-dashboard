import { HideMenuButton } from "@/app/HideMenuButton";
import { Notification } from "@/app/Notification";
import Providers from "@/app/Providers";
import { SearchBlock } from "@/app/SearchBlock";
import { SideBar } from "@/app/SideBar";
import { SideBarContextProvider } from "@/app/SideBarContextProvider";
import { ThemeButton } from "@/app/ThemeButton";
import { config } from "@fortawesome/fontawesome-svg-core";
import "@fortawesome/fontawesome-svg-core/styles.css";
import { faCircleUser } from "@fortawesome/free-regular-svg-icons";
import { FontAwesomeIcon } from "@fortawesome/react-fontawesome";
import { Inter, Poppins } from "next/font/google";
import "./globals.css";

config.autoAddCss = false;

const poppins = Poppins({
  weight: "300",
  subsets: ["latin"],
});
// If loading a variable font, you don't need to specify the font weight
const inter = Inter({ subsets: ["latin"] });

export const metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  return (
    <html lang="en">
      <body className={`${inter.className}  bg-[#f6f9ff]`}>
        <Providers>
          <SideBarContextProvider>
            <div className="text-[#7b8190]">
              <header className="flex w-full justify-between bg-white fixed top-0 z-20">
                <div className="p-5 w-full flex justify-between dark:bg-neutral-600 shadow-md">
                  <div className="flex justify-between items-center w-52">
                    <div className="font-bold text-indigo-900 text-3xl dark:text-yellow-300">
                      LunaAdmin
                    </div>
                    <HideMenuButton />
                  </div>
                  <nav className="flex gap-5 items-center">
                    <SearchBlock />
                    <ThemeButton />
                    <Notification />
                    <FontAwesomeIcon
                      className="text-[#adb4d2]-500"
                      icon={faCircleUser}
                    />
                  </nav>
                </div>
              </header>
              <div className="flex w-full">
                <SideBar />
                {children}
              </div>
            </div>
          </SideBarContextProvider>
        </Providers>
      </body>
    </html>
  );
}
